{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\environment\\\\react-workspace\\\\react-anime\\\\src\\\\container\\\\Anime.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from '~/component/Button';\nimport createPeriods from '~/util/createPeriod';\nimport { getAnnimeAsync } from '../ducks/anime/slice';\nvar date = new Date();\n\nvar Anime = function Anime() {\n  _s();\n\n  var dispatch = useDispatch();\n  var buttonList = [];\n  var seasons = {\n    4: '冬',\n    3: '秋',\n    2: '夏',\n    1: '春'\n  };\n\n  var _useState = useState({\n    year: date.getFullYear(),\n    period: createPeriods(date.getMonth() + 1)\n  }),\n      season = _useState[0],\n      setSeason = _useState[1];\n\n  var getDefaultAnimeList = function getDefaultAnimeList() {\n    dispatch(getAnnimeAsync(2020, 4));\n  };\n\n  var _loop = function _loop(i) {\n    Object.keys(seasons).forEach(function (key) {\n      buttonList.push( /*#__PURE__*/_jsxDEV(Button, {\n        year: i,\n        season: seasons[key],\n        onClick: function onClick() {\n          setSeason(_objectSpread(_objectSpread({}, season), {}, {\n            year: i,\n            period: Number(key)\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, _this));\n    });\n  };\n\n  for (var i = date.getFullYear(); 2014 <= i; i--) {\n    _loop(i);\n  }\n\n  useEffect(function () {\n    dispatch(getAnnimeAsync(season.year, season.period));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onLoad: getDefaultAnimeList,\n      children: buttonList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Anime, \"FbFOa7GgXVDI0rSt6+Q9y9f2JZ4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Anime;\nexport default Anime;\n\nvar _c;\n\n$RefreshReg$(_c, \"Anime\");","map":{"version":3,"sources":["E:/environment/react-workspace/react-anime/src/container/Anime.tsx"],"names":["React","useState","useEffect","useDispatch","Button","createPeriods","getAnnimeAsync","date","Date","Anime","dispatch","buttonList","seasons","year","getFullYear","period","getMonth","season","setSeason","getDefaultAnimeList","i","Object","keys","forEach","key","push","Number"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,IAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AACnB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,MAAMQ,UAAU,GAAG,EAAnB;AAEA,MAAMC,OAAO,GAAG;AAAE,OAAG,GAAL;AAAU,OAAG,GAAb;AAAkB,OAAG,GAArB;AAA0B,OAAG;AAA7B,GAAhB;;AALmB,kBAOSX,QAAQ,CAAC;AACpCY,IAAAA,IAAI,EAAEN,IAAI,CAACO,WAAL,EAD8B;AAEpCC,IAAAA,MAAM,EAAEV,aAAa,CAACE,IAAI,CAACS,QAAL,KAAkB,CAAnB;AAFe,GAAD,CAPjB;AAAA,MAOZC,MAPY;AAAA,MAOJC,SAPI;;AAYnB,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACjCT,IAAAA,QAAQ,CAACJ,cAAc,CAAC,IAAD,EAAO,CAAP,CAAf,CAAR;AACA,GAFD;;AAZmB,6BAgBVc,CAhBU;AAiBlBC,IAAAA,MAAM,CAACC,IAAP,CAAYV,OAAZ,EAAqBW,OAArB,CAA6B,UAACC,GAAD,EAAS;AACrCb,MAAAA,UAAU,CAACc,IAAX,eACC,QAAC,MAAD;AACC,QAAA,IAAI,EAAEL,CADP;AAEC,QAAA,MAAM,EAAER,OAAO,CAACY,GAAD,CAFhB;AAGC,QAAA,OAAO,EAAE,mBAAM;AACdN,UAAAA,SAAS,iCAAMD,MAAN;AAAcJ,YAAAA,IAAI,EAAEO,CAApB;AAAuBL,YAAAA,MAAM,EAAEW,MAAM,CAACF,GAAD;AAArC,aAAT;AACA;AALF;AAAA;AAAA;AAAA;AAAA,eADD;AASA,KAVD;AAjBkB;;AAgBnB,OAAK,IAAIJ,CAAC,GAAGb,IAAI,CAACO,WAAL,EAAb,EAAiC,QAAQM,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;AAAA,UAAxCA,CAAwC;AAYhD;;AAEDlB,EAAAA,SAAS,CAAC,YAAM;AACfQ,IAAAA,QAAQ,CAACJ,cAAc,CAACW,MAAM,CAACJ,IAAR,EAAcI,MAAM,CAACF,MAArB,CAAf,CAAR;AACA,GAFQ,CAAT;AAIA,sBACC;AAAA,2BACC;AAAK,MAAA,MAAM,EAAEI,mBAAb;AAAA,gBAAmCR;AAAnC;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAKA,CAvCD;;GAAMF,K;UACYN,W;;;KADZM,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '~/component/Button';\r\nimport createPeriods from '~/util/createPeriod';\r\nimport { getAnnimeAsync } from '../ducks/anime/slice';\r\n\r\nconst date = new Date();\r\n\r\nconst Anime = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst buttonList = [];\r\n\r\n\tconst seasons = { 4: '冬', 3: '秋', 2: '夏', 1: '春' };\r\n\r\n\tconst [season, setSeason] = useState({\r\n\t\tyear: date.getFullYear(),\r\n\t\tperiod: createPeriods(date.getMonth() + 1),\r\n\t});\r\n\r\n\tconst getDefaultAnimeList = () => {\r\n\t\tdispatch(getAnnimeAsync(2020, 4));\r\n\t};\r\n\r\n\tfor (let i = date.getFullYear(); 2014 <= i; i--) {\r\n\t\tObject.keys(seasons).forEach((key) => {\r\n\t\t\tbuttonList.push(\r\n\t\t\t\t<Button\r\n\t\t\t\t\tyear={i}\r\n\t\t\t\t\tseason={seasons[key]}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetSeason({ ...season, year: i, period: Number(key) });\r\n\t\t\t\t\t}}\r\n\t\t\t\t></Button>,\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getAnnimeAsync(season.year, season.period));\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div onLoad={getDefaultAnimeList}>{buttonList}</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Anime;\r\n"]},"metadata":{},"sourceType":"module"}