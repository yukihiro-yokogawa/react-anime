{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst date = new Date();\nexport const initialState = {\n  items: [{\n    year: null,\n    period: null,\n    animeList: {\n      id: null,\n      title: '',\n      title_short1: '',\n      title_short2: '',\n      title_short3: '',\n      public_url: '',\n      twitter_account: '',\n      twitter_hash_tag: '',\n      cours_id: null,\n      created_at: '',\n      updated_at: '',\n      sex: null,\n      sequel: null,\n      city_code: null,\n      city_name: '',\n      product_companies: 'null'\n    }\n  }],\n  loading: true,\n  error: null\n};\nconst animeInfoSlice = createSlice({\n  name: 'anime',\n  initialState,\n  reducers: {\n    getAnnimeRequest: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n      items: action.payload\n    }),\n    getAnnimeFailure: (state, action) => _objectSpread({}, state)\n  }\n});\nexport const {\n  getAnnimeRequest\n} = animeInfoSlice.actions;\nexport default animeInfoSlice;\nexport const getDefaultAnnimeAsync = (year, season) => async dispatch => {\n  await axios.get(`http://api.moemoe.tokyo/anime/v1/master/${year}/${season}`).then(response => {\n    const items = response.data;\n    return items;\n  });\n};","map":{"version":3,"sources":["E:/environment/react-workspace/react-anime/src/ducks/anime/slice.ts"],"names":["createSlice","axios","date","Date","initialState","items","year","period","animeList","id","title","title_short1","title_short2","title_short3","public_url","twitter_account","twitter_hash_tag","cours_id","created_at","updated_at","sex","sequel","city_code","city_name","product_companies","loading","error","animeInfoSlice","name","reducers","getAnnimeRequest","state","action","payload","getAnnimeFailure","actions","getDefaultAnnimeAsync","season","dispatch","get","then","response","data"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEA,OAAO,MAAMC,YAA0B,GAAG;AACzCC,EAAAA,KAAK,EAAE,CACN;AACCC,IAAAA,IAAI,EAAE,IADP;AAECC,IAAAA,MAAM,EAAE,IAFT;AAGCC,IAAAA,SAAS,EAAE;AACVC,MAAAA,EAAE,EAAE,IADM;AAEVC,MAAAA,KAAK,EAAE,EAFG;AAGVC,MAAAA,YAAY,EAAE,EAHJ;AAIVC,MAAAA,YAAY,EAAE,EAJJ;AAKVC,MAAAA,YAAY,EAAE,EALJ;AAMVC,MAAAA,UAAU,EAAE,EANF;AAOVC,MAAAA,eAAe,EAAE,EAPP;AAQVC,MAAAA,gBAAgB,EAAE,EARR;AASVC,MAAAA,QAAQ,EAAE,IATA;AAUVC,MAAAA,UAAU,EAAE,EAVF;AAWVC,MAAAA,UAAU,EAAE,EAXF;AAYVC,MAAAA,GAAG,EAAE,IAZK;AAaVC,MAAAA,MAAM,EAAE,IAbE;AAcVC,MAAAA,SAAS,EAAE,IAdD;AAeVC,MAAAA,SAAS,EAAE,EAfD;AAgBVC,MAAAA,iBAAiB,EAAE;AAhBT;AAHZ,GADM,CADkC;AAyBzCC,EAAAA,OAAO,EAAE,IAzBgC;AA0BzCC,EAAAA,KAAK,EAAE;AA1BkC,CAAnC;AA6BP,MAAMC,cAAc,GAAG3B,WAAW,CAAC;AAClC4B,EAAAA,IAAI,EAAE,OAD4B;AAElCxB,EAAAA,YAFkC;AAGlCyB,EAAAA,QAAQ,EAAE;AACTC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,EAAQC,MAAR,qCACdD,KADc;AAEjB1B,MAAAA,KAAK,EAAE2B,MAAM,CAACC;AAFG,MADT;AAKTC,IAAAA,gBAAgB,EAAE,CAACH,KAAD,EAAQC,MAAR,uBACdD,KADc;AALT;AAHwB,CAAD,CAAlC;AAcA,OAAO,MAAM;AAAED,EAAAA;AAAF,IAAuBH,cAAc,CAACQ,OAA5C;AAEP,eAAeR,cAAf;AAEA,OAAO,MAAMS,qBAAqB,GAAG,CAAC9B,IAAD,EAAe+B,MAAf,KAAkC,MAAOC,QAAP,IAAoE;AAC1I,QAAMrC,KAAK,CAACsC,GAAN,CAAW,2CAA0CjC,IAAK,IAAG+B,MAAO,EAApE,EAAuEG,IAAvE,CAA6EC,QAAD,IAAc;AAC/F,UAAMpC,KAAqB,GAAGoC,QAAQ,CAACC,IAAvC;AACA,WAAOrC,KAAP;AACA,GAHK,CAAN;AAIA,CALM","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { NetworkState, SeasonState, AnimeInfoState } from '../../type/type';\r\n\r\nconst date = new Date();\r\n\r\nexport const initialState: NetworkState = {\r\n\titems: [\r\n\t\t{\r\n\t\t\tyear: null,\r\n\t\t\tperiod: null,\r\n\t\t\tanimeList: {\r\n\t\t\t\tid: null,\r\n\t\t\t\ttitle: '',\r\n\t\t\t\ttitle_short1: '',\r\n\t\t\t\ttitle_short2: '',\r\n\t\t\t\ttitle_short3: '',\r\n\t\t\t\tpublic_url: '',\r\n\t\t\t\ttwitter_account: '',\r\n\t\t\t\ttwitter_hash_tag: '',\r\n\t\t\t\tcours_id: null,\r\n\t\t\t\tcreated_at: '',\r\n\t\t\t\tupdated_at: '',\r\n\t\t\t\tsex: null,\r\n\t\t\t\tsequel: null,\r\n\t\t\t\tcity_code: null,\r\n\t\t\t\tcity_name: '',\r\n\t\t\t\tproduct_companies: 'null',\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n\tloading: true,\r\n\terror: null,\r\n};\r\n\r\nconst animeInfoSlice = createSlice({\r\n\tname: 'anime',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tgetAnnimeRequest: (state, action: PayloadAction<Array<SeasonState>>) => ({\r\n\t\t\t...state,\r\n\t\t\titems: action.payload,\r\n\t\t}),\r\n\t\tgetAnnimeFailure: (state, action) => ({\r\n\t\t\t...state,\r\n\t\t}),\r\n\t},\r\n});\r\n\r\nexport const { getAnnimeRequest } = animeInfoSlice.actions;\r\n\r\nexport default animeInfoSlice;\r\n\r\nexport const getDefaultAnnimeAsync = (year: number, season: number) => async (dispatch: (arg0: { payload: any; type: string }) => void) => {\r\n\tawait axios.get(`http://api.moemoe.tokyo/anime/v1/master/${year}/${season}`).then((response) => {\r\n\t\tconst items: AnimeInfoState = response.data;\r\n\t\treturn items;\r\n\t});\r\n};\r\n"]},"metadata":{},"sourceType":"module"}