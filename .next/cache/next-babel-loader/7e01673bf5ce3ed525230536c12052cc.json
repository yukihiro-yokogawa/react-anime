{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\environment\\\\react-workspace\\\\react-anime\\\\src\\\\container\\\\Anime.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from '~/component/Button';\nimport createPeriods from '~/util/createPeriod';\nimport { getAnnimeAsync } from '../ducks/anime/slice';\nconst date = new Date();\n\nconst Anime = () => {\n  const dispatch = useDispatch();\n  const buttonList = [];\n  const seasons = ['冬', '秋', '夏', '春'];\n  const {\n    0: season,\n    1: setSeason\n  } = useState({\n    year: date.getFullYear(),\n    period: createPeriods(date.getMonth() + 1)\n  });\n\n  const getDefaultAnimeList = () => {\n    dispatch(getAnnimeAsync(date.getFullYear(), createPeriods(date.getMonth() + 1)));\n  };\n\n  const handleClickSetSeason = (year, period) => {\n    setSeason(_objectSpread(_objectSpread({}, season), {}, {\n      year: year,\n      period: period\n    }));\n  };\n\n  for (let i = date.getFullYear(); 2014 <= i; i--) {\n    seasons.forEach(season => {\n      buttonList.push( /*#__PURE__*/_jsxDEV(Button, {\n        year: i,\n        season: season,\n        period: season == '春' ? 1 : season == '夏' ? 2 : season == '秋' ? 3 : season == '冬' ? 4 : null,\n        handleClick: (year, period) => handleClickSetSeason(year, period)\n      }, `${i} ${season}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this));\n    });\n  }\n\n  useEffect(() => {\n    dispatch(getAnnimeAsync(season.year, season.period));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onLoad: getDefaultAnimeList,\n      children: buttonList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default Anime;","map":{"version":3,"sources":["E:/environment/react-workspace/react-anime/src/container/Anime.tsx"],"names":["React","useState","useEffect","useDispatch","Button","createPeriods","getAnnimeAsync","date","Date","Anime","dispatch","buttonList","seasons","season","setSeason","year","getFullYear","period","getMonth","getDefaultAnimeList","handleClickSetSeason","i","forEach","push"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;;AAEA,MAAMC,KAAK,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,UAAU,GAAG,EAAnB;AAEA,QAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAhB;AAEA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC;AACpCc,IAAAA,IAAI,EAAER,IAAI,CAACS,WAAL,EAD8B;AAEpCC,IAAAA,MAAM,EAAEZ,aAAa,CAACE,IAAI,CAACW,QAAL,KAAkB,CAAnB;AAFe,GAAD,CAApC;;AAKA,QAAMC,mBAAmB,GAAG,MAAM;AACjCT,IAAAA,QAAQ,CAACJ,cAAc,CAACC,IAAI,CAACS,WAAL,EAAD,EAAqBX,aAAa,CAACE,IAAI,CAACW,QAAL,KAAkB,CAAnB,CAAlC,CAAf,CAAR;AACA,GAFD;;AAIA,QAAME,oBAAoB,GAAG,CAACL,IAAD,EAAeE,MAAf,KAAkC;AAC9DH,IAAAA,SAAS,iCACLD,MADK;AAERE,MAAAA,IAAI,EAAEA,IAFE;AAGRE,MAAAA,MAAM,EAAEA;AAHA,OAAT;AAKA,GAND;;AAQA,OAAK,IAAII,CAAC,GAAGd,IAAI,CAACS,WAAL,EAAb,EAAiC,QAAQK,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;AAChDT,IAAAA,OAAO,CAACU,OAAR,CAAiBT,MAAD,IAAY;AAC3BF,MAAAA,UAAU,CAACY,IAAX,eACC,QAAC,MAAD;AAEC,QAAA,IAAI,EAAEF,CAFP;AAGC,QAAA,MAAM,EAAER,MAHT;AAIC,QAAA,MAAM,EAAEA,MAAM,IAAI,GAAV,GAAgB,CAAhB,GAAoBA,MAAM,IAAI,GAAV,GAAgB,CAAhB,GAAoBA,MAAM,IAAI,GAAV,GAAgB,CAAhB,GAAoBA,MAAM,IAAI,GAAV,GAAgB,CAAhB,GAAoB,IAJzF;AAKC,QAAA,WAAW,EAAE,CAACE,IAAD,EAAeE,MAAf,KAAkCG,oBAAoB,CAACL,IAAD,EAAOE,MAAP;AALpE,SACO,GAAEI,CAAE,IAAGR,MAAO,EADrB;AAAA;AAAA;AAAA;AAAA,cADD;AASA,KAVD;AAWA;;AAEDX,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,QAAQ,CAACJ,cAAc,CAACO,MAAM,CAACE,IAAR,EAAcF,MAAM,CAACI,MAArB,CAAf,CAAR;AACA,GAFQ,CAAT;AAIA,sBACC;AAAA,2BACC;AAAK,MAAA,MAAM,EAAEE,mBAAb;AAAA,gBAAmCR;AAAnC;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAKA,CA/CD;;AAiDA,eAAeF,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '~/component/Button';\r\nimport createPeriods from '~/util/createPeriod';\r\nimport { getAnnimeAsync } from '../ducks/anime/slice';\r\n\r\nconst date = new Date();\r\n\r\nconst Anime = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst buttonList = [];\r\n\r\n\tconst seasons = ['冬', '秋', '夏', '春'];\r\n\r\n\tconst [season, setSeason] = useState({\r\n\t\tyear: date.getFullYear(),\r\n\t\tperiod: createPeriods(date.getMonth() + 1),\r\n\t});\r\n\r\n\tconst getDefaultAnimeList = () => {\r\n\t\tdispatch(getAnnimeAsync(date.getFullYear(), createPeriods(date.getMonth() + 1)));\r\n\t};\r\n\r\n\tconst handleClickSetSeason = (year: number, period: number) => {\r\n\t\tsetSeason({\r\n\t\t\t...season,\r\n\t\t\tyear: year,\r\n\t\t\tperiod: period,\r\n\t\t});\r\n\t};\r\n\r\n\tfor (let i = date.getFullYear(); 2014 <= i; i--) {\r\n\t\tseasons.forEach((season) => {\r\n\t\t\tbuttonList.push(\r\n\t\t\t\t<Button\r\n\t\t\t\t\tkey={`${i} ${season}`}\r\n\t\t\t\t\tyear={i}\r\n\t\t\t\t\tseason={season}\r\n\t\t\t\t\tperiod={season == '春' ? 1 : season == '夏' ? 2 : season == '秋' ? 3 : season == '冬' ? 4 : null}\r\n\t\t\t\t\thandleClick={(year: number, period: number) => handleClickSetSeason(year, period)}\r\n\t\t\t\t></Button>,\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getAnnimeAsync(season.year, season.period));\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div onLoad={getDefaultAnimeList}>{buttonList}</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Anime;\r\n"]},"metadata":{},"sourceType":"module"}