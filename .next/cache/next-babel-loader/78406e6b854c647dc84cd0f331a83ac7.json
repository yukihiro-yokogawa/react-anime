{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nvar date = new Date();\nexport var initialState = {\n  items: [{\n    year: null,\n    period: null,\n    animeList: getDefaultAnnimeAsync(2020, 2)\n  }],\n  loading: true,\n  error: null\n};\nvar animeInfoSlice = createSlice({\n  name: 'anime',\n  initialState: initialState,\n  reducers: {\n    getDefaultAnnimeRequest: function getDefaultAnnimeRequest(state, action) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: action.payload\n      });\n    },\n    getAnnimeRequest: function getAnnimeRequest(state, action) {\n      state.items.push(action.payload);\n    },\n    getAnnimeFailure: function getAnnimeFailure(state, action) {\n      return _objectSpread({}, state);\n    }\n  }\n});\nvar getAnnimeRequest = animeInfoSlice.actions.getAnnimeRequest;\nexport { getAnnimeRequest };\nexport default animeInfoSlice;\nexport var getDefaultAnnimeAsync = function getDefaultAnnimeAsync(year, season) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"http://api.moemoe.tokyo/anime/v1/master/\".concat(year, \"/\").concat(season)).then(function (response) {\n                var items = response.data;\n                dispatch(getDefaultAnnimeRequest);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["E:/environment/react-workspace/react-anime/src/ducks/anime/slice.ts"],"names":["createSlice","axios","date","Date","initialState","items","year","period","animeList","getDefaultAnnimeAsync","loading","error","animeInfoSlice","name","reducers","getDefaultAnnimeRequest","state","action","payload","getAnnimeRequest","push","getAnnimeFailure","actions","season","dispatch","get","then","response","data"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,IAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEA,OAAO,IAAMC,YAA0B,GAAG;AACzCC,EAAAA,KAAK,EAAE,CACN;AACCC,IAAAA,IAAI,EAAE,IADP;AAECC,IAAAA,MAAM,EAAE,IAFT;AAGCC,IAAAA,SAAS,EAAEC,qBAAqB,CAAC,IAAD,EAAO,CAAP;AAHjC,GADM,CADkC;AAQzCC,EAAAA,OAAO,EAAE,IARgC;AASzCC,EAAAA,KAAK,EAAE;AATkC,CAAnC;AAYP,IAAMC,cAAc,GAAGZ,WAAW,CAAC;AAClCa,EAAAA,IAAI,EAAE,OAD4B;AAElCT,EAAAA,YAAY,EAAZA,YAFkC;AAGlCU,EAAAA,QAAQ,EAAE;AACTC,IAAAA,uBAAuB,EAAE,iCAACC,KAAD,EAAQC,MAAR;AAAA,6CACrBD,KADqB;AAExBX,QAAAA,KAAK,EAAEY,MAAM,CAACC;AAFU;AAAA,KADhB;AAKTC,IAAAA,gBALS,4BAKQH,KALR,EAKeC,MALf,EAKmD;AAC3DD,MAAAA,KAAK,CAACX,KAAN,CAAYe,IAAZ,CAAiBH,MAAM,CAACC,OAAxB;AACA,KAPQ;AAQTG,IAAAA,gBAAgB,EAAE,0BAACL,KAAD,EAAQC,MAAR;AAAA,+BACdD,KADc;AAAA;AART;AAHwB,CAAD,CAAlC;IAiBeG,gB,GAAqBP,cAAc,CAACU,O,CAApCH,gB;;AAEf,eAAeP,cAAf;AAEA,OAAO,IAAMH,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACH,IAAD,EAAeiB,MAAf;AAAA;AAAA,wEAAkC,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAChEvB,KAAK,CAACwB,GAAN,mDAAqDnB,IAArD,cAA6DiB,MAA7D,GAAuEG,IAAvE,CAA4E,UAACC,QAAD,EAAc;AAC/F,oBAAMtB,KAAqB,GAAGsB,QAAQ,CAACC,IAAvC;AACAJ,gBAAAA,QAAQ,CAACT,uBAAD,CAAR;AACA,eAHK,CADgE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { NetworkState, SeasonState, AnimeInfoState } from '../../type/type';\r\n\r\nconst date = new Date();\r\n\r\nexport const initialState: NetworkState = {\r\n\titems: [\r\n\t\t{\r\n\t\t\tyear: null,\r\n\t\t\tperiod: null,\r\n\t\t\tanimeList: getDefaultAnnimeAsync(2020, 2),\r\n\t\t},\r\n\t],\r\n\tloading: true,\r\n\terror: null,\r\n};\r\n\r\nconst animeInfoSlice = createSlice({\r\n\tname: 'anime',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tgetDefaultAnnimeRequest: (state, action: PayloadAction<Array<SeasonState>>) => ({\r\n\t\t\t...state,\r\n\t\t\titems: action.payload,\r\n\t\t}),\r\n\t\tgetAnnimeRequest(state, action: PayloadAction<SeasonState>) {\r\n\t\t\tstate.items.push(action.payload);\r\n\t\t},\r\n\t\tgetAnnimeFailure: (state, action) => ({\r\n\t\t\t...state,\r\n\t\t}),\r\n\t},\r\n});\r\n\r\nexport const { getAnnimeRequest } = animeInfoSlice.actions;\r\n\r\nexport default animeInfoSlice;\r\n\r\nexport const getDefaultAnnimeAsync = (year: number, season: number) => async (dispatch: (arg0: { payload: any; type: string }) => void) => {\r\n\tawait axios.get(`http://api.moemoe.tokyo/anime/v1/master/${year}/${season}`).then((response) => {\r\n\t\tconst items: AnimeInfoState = response.data;\r\n\t\tdispatch(getDefaultAnnimeRequest);\r\n\t});\r\n};\r\n"]},"metadata":{},"sourceType":"module"}