{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nvar date = new Date();\nexport var initialState = {\n  items: {\n    year: null,\n    period: null,\n    animeList: {\n      id: null,\n      title: '',\n      title_short1: '',\n      title_short2: '',\n      title_short3: '',\n      public_url: '',\n      twitter_account: '',\n      twitter_hash_tag: '',\n      cours_id: null,\n      created_at: '',\n      updated_at: '',\n      sex: null,\n      city_code: null,\n      sequel: null,\n      city_name: '',\n      product_companies: ''\n    }\n  },\n  loading: true,\n  error: null\n};\nvar animeInfoSlice = createSlice({\n  name: 'anime',\n  initialState: initialState,\n  reducers: {\n    getAnnimeRequest: function getAnnimeRequest(state, action) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: action.payload\n      });\n    },\n    getAnnimeFailure: function getAnnimeFailure(state, action) {\n      return _objectSpread({}, state);\n    }\n  }\n});\nvar getAnnimeRequest = animeInfoSlice.actions.getAnnimeRequest;\nexport { getAnnimeRequest };\nexport default animeInfoSlice;\nexport var getAnnimeAsync = function getAnnimeAsync(year, period) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"http://api.moemoe.tokyo/anime/v1/master/\".concat(year, \"/\").concat(period)).then(function (response) {\n                var animeList = {\n                  year: year,\n                  period: period,\n                  animeList: response.data\n                };\n                dispatch(getAnnimeRequest(animeList));\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["E:/environment/react-workspace/react-anime/src/ducks/anime/slice.ts"],"names":["createSlice","axios","date","Date","initialState","items","year","period","animeList","id","title","title_short1","title_short2","title_short3","public_url","twitter_account","twitter_hash_tag","cours_id","created_at","updated_at","sex","city_code","sequel","city_name","product_companies","loading","error","animeInfoSlice","name","reducers","getAnnimeRequest","state","action","payload","getAnnimeFailure","actions","getAnnimeAsync","dispatch","get","then","response","data"],"mappings":";;;;;;;;AAAA,SAA6BA,WAA7B,QAA+D,kBAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,IAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEA,OAAO,IAAMC,YAA0B,GAAG;AACzCC,EAAAA,KAAK,EAAE;AACNC,IAAAA,IAAI,EAAE,IADA;AAENC,IAAAA,MAAM,EAAE,IAFF;AAGNC,IAAAA,SAAS,EAAE;AACVC,MAAAA,EAAE,EAAE,IADM;AAEVC,MAAAA,KAAK,EAAE,EAFG;AAGVC,MAAAA,YAAY,EAAE,EAHJ;AAIVC,MAAAA,YAAY,EAAE,EAJJ;AAKVC,MAAAA,YAAY,EAAE,EALJ;AAMVC,MAAAA,UAAU,EAAE,EANF;AAOVC,MAAAA,eAAe,EAAE,EAPP;AAQVC,MAAAA,gBAAgB,EAAE,EARR;AASVC,MAAAA,QAAQ,EAAE,IATA;AAUVC,MAAAA,UAAU,EAAE,EAVF;AAWVC,MAAAA,UAAU,EAAE,EAXF;AAYVC,MAAAA,GAAG,EAAE,IAZK;AAaVC,MAAAA,SAAS,EAAE,IAbD;AAcVC,MAAAA,MAAM,EAAE,IAdE;AAeVC,MAAAA,SAAS,EAAE,EAfD;AAgBVC,MAAAA,iBAAiB,EAAE;AAhBT;AAHL,GADkC;AAuBzCC,EAAAA,OAAO,EAAE,IAvBgC;AAwBzCC,EAAAA,KAAK,EAAE;AAxBkC,CAAnC;AA2BP,IAAMC,cAAc,GAAG3B,WAAW,CAAC;AAClC4B,EAAAA,IAAI,EAAE,OAD4B;AAElCxB,EAAAA,YAAY,EAAZA,YAFkC;AAGlCyB,EAAAA,QAAQ,EAAE;AACTC,IAAAA,gBAAgB,EAAE,0BAACC,KAAD,EAAQC,MAAR;AAAA,6CACdD,KADc;AAEjB1B,QAAAA,KAAK,EAAE2B,MAAM,CAACC;AAFG;AAAA,KADT;AAKTC,IAAAA,gBAAgB,EAAE,0BAACH,KAAD,EAAQC,MAAR;AAAA,+BACdD,KADc;AAAA;AALT;AAHwB,CAAD,CAAlC;IAceD,gB,GAAqBH,cAAc,CAACQ,O,CAApCL,gB;;AAEf,eAAeH,cAAf;AAEA,OAAO,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAAC9B,IAAD,EAAeC,MAAf;AAAA;AAAA,wEAAkC,iBAAO8B,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACzDpC,KAAK,CAACqC,GAAN,mDAAqDhC,IAArD,cAA6DC,MAA7D,GAAuEgC,IAAvE,CAA4E,UAACC,QAAD,EAAc;AAC/F,oBAAMhC,SAAsB,GAAG;AAAEF,kBAAAA,IAAI,EAAEA,IAAR;AAAcC,kBAAAA,MAAM,EAAEA,MAAtB;AAA8BC,kBAAAA,SAAS,EAAEgC,QAAQ,CAACC;AAAlD,iBAA/B;AACAJ,gBAAAA,QAAQ,CAACP,gBAAgB,CAACtB,SAAD,CAAjB,CAAR;AACA,eAHK,CADyD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { bindActionCreators, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport createPeriod from '~/util/createPeriod';\r\nimport { NetworkState, SeasonState, AnimeInfoState } from '../../type/type';\r\n\r\nconst date = new Date();\r\n\r\nexport const initialState: NetworkState = {\r\n\titems: {\r\n\t\tyear: null,\r\n\t\tperiod: null,\r\n\t\tanimeList: {\r\n\t\t\tid: null,\r\n\t\t\ttitle: '',\r\n\t\t\ttitle_short1: '',\r\n\t\t\ttitle_short2: '',\r\n\t\t\ttitle_short3: '',\r\n\t\t\tpublic_url: '',\r\n\t\t\ttwitter_account: '',\r\n\t\t\ttwitter_hash_tag: '',\r\n\t\t\tcours_id: null,\r\n\t\t\tcreated_at: '',\r\n\t\t\tupdated_at: '',\r\n\t\t\tsex: null,\r\n\t\t\tcity_code: null,\r\n\t\t\tsequel: null,\r\n\t\t\tcity_name: '',\r\n\t\t\tproduct_companies: '',\r\n\t\t},\r\n\t},\r\n\tloading: true,\r\n\terror: null,\r\n};\r\n\r\nconst animeInfoSlice = createSlice({\r\n\tname: 'anime',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tgetAnnimeRequest: (state, action: PayloadAction<SeasonState>) => ({\r\n\t\t\t...state,\r\n\t\t\titems: action.payload,\r\n\t\t}),\r\n\t\tgetAnnimeFailure: (state, action) => ({\r\n\t\t\t...state,\r\n\t\t}),\r\n\t},\r\n});\r\n\r\nexport const { getAnnimeRequest } = animeInfoSlice.actions;\r\n\r\nexport default animeInfoSlice;\r\n\r\nexport const getAnnimeAsync = (year: number, period: number) => async (dispatch: (arg0: { payload: any; type: string }) => void) => {\r\n\tawait axios.get(`http://api.moemoe.tokyo/anime/v1/master/${year}/${period}`).then((response) => {\r\n\t\tconst animeList: SeasonState = { year: year, period: period, animeList: response.data };\r\n\t\tdispatch(getAnnimeRequest(animeList));\r\n\t});\r\n};\r\n"]},"metadata":{},"sourceType":"module"}