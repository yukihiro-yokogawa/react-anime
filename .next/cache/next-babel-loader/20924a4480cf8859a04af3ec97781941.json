{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\environment\\\\react-workspace\\\\react-anime\\\\src\\\\container\\\\Anime.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from '~/component/Button';\nimport createPeriods from '~/util/createPeriod';\nimport { getAnnimeAsync } from '../ducks/anime/slice';\nconst date = new Date();\n\nconst Anime = () => {\n  const dispatch = useDispatch();\n  const buttonList = [];\n  const seasons = {\n    4: '冬',\n    3: '秋',\n    2: '夏',\n    1: '春'\n  };\n  const {\n    0: season,\n    1: setSeason\n  } = useState({\n    year: date.getFullYear(),\n    period: createPeriods(date.getMonth() + 1)\n  });\n\n  const getDefaultAnimeList = () => {\n    dispatch(getAnnimeAsync(2020, 4));\n  };\n\n  const handleClickSetSeason = (year, peropd) => {};\n\n  for (let i = date.getFullYear(); 2014 <= i; i--) {\n    Object.keys(seasons).forEach(key => {\n      buttonList.push( /*#__PURE__*/_jsxDEV(Button, {\n        year: i,\n        season: seasons[key],\n        period: key,\n        handleClick: (year, period) => handleClickSetSeason(year, period)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this));\n    });\n  }\n\n  useEffect(() => {\n    console.log(season);\n    dispatch(getAnnimeAsync(season.year, season.period));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onLoad: getDefaultAnimeList,\n      children: buttonList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default Anime;","map":{"version":3,"sources":["E:/environment/react-workspace/react-anime/src/container/Anime.tsx"],"names":["React","useState","useEffect","useDispatch","Button","createPeriods","getAnnimeAsync","date","Date","Anime","dispatch","buttonList","seasons","season","setSeason","year","getFullYear","period","getMonth","getDefaultAnimeList","handleClickSetSeason","peropd","i","Object","keys","forEach","key","push","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;;AAEA,MAAMC,KAAK,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,UAAU,GAAG,EAAnB;AAEA,QAAMC,OAAO,GAAG;AAAE,OAAG,GAAL;AAAU,OAAG,GAAb;AAAkB,OAAG,GAArB;AAA0B,OAAG;AAA7B,GAAhB;AAEA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC;AACpCc,IAAAA,IAAI,EAAER,IAAI,CAACS,WAAL,EAD8B;AAEpCC,IAAAA,MAAM,EAAEZ,aAAa,CAACE,IAAI,CAACW,QAAL,KAAkB,CAAnB;AAFe,GAAD,CAApC;;AAKA,QAAMC,mBAAmB,GAAG,MAAM;AACjCT,IAAAA,QAAQ,CAACJ,cAAc,CAAC,IAAD,EAAO,CAAP,CAAf,CAAR;AACA,GAFD;;AAIA,QAAMc,oBAAoB,GAAG,CAACL,IAAD,EAAeM,MAAf,KAAkC,CAAE,CAAjE;;AAEA,OAAK,IAAIC,CAAC,GAAGf,IAAI,CAACS,WAAL,EAAb,EAAiC,QAAQM,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;AAChDC,IAAAA,MAAM,CAACC,IAAP,CAAYZ,OAAZ,EAAqBa,OAArB,CAA8BC,GAAD,IAAS;AACrCf,MAAAA,UAAU,CAACgB,IAAX,eACC,QAAC,MAAD;AACC,QAAA,IAAI,EAAEL,CADP;AAEC,QAAA,MAAM,EAAEV,OAAO,CAACc,GAAD,CAFhB;AAGC,QAAA,MAAM,EAAEA,GAHT;AAIC,QAAA,WAAW,EAAE,CAACX,IAAD,EAAeE,MAAf,KAAkCG,oBAAoB,CAACL,IAAD,EAAOE,MAAP;AAJpE;AAAA;AAAA;AAAA;AAAA,cADD;AAQA,KATD;AAUA;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACf0B,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACAH,IAAAA,QAAQ,CAACJ,cAAc,CAACO,MAAM,CAACE,IAAR,EAAcF,MAAM,CAACI,MAArB,CAAf,CAAR;AACA,GAHQ,CAAT;AAKA,sBACC;AAAA,2BACC;AAAK,MAAA,MAAM,EAAEE,mBAAb;AAAA,gBAAmCR;AAAnC;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAKA,CAzCD;;AA2CA,eAAeF,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '~/component/Button';\r\nimport createPeriods from '~/util/createPeriod';\r\nimport { getAnnimeAsync } from '../ducks/anime/slice';\r\n\r\nconst date = new Date();\r\n\r\nconst Anime = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst buttonList = [];\r\n\r\n\tconst seasons = { 4: '冬', 3: '秋', 2: '夏', 1: '春' };\r\n\r\n\tconst [season, setSeason] = useState({\r\n\t\tyear: date.getFullYear(),\r\n\t\tperiod: createPeriods(date.getMonth() + 1),\r\n\t});\r\n\r\n\tconst getDefaultAnimeList = () => {\r\n\t\tdispatch(getAnnimeAsync(2020, 4));\r\n\t};\r\n\r\n\tconst handleClickSetSeason = (year: number, peropd: number) => {};\r\n\r\n\tfor (let i = date.getFullYear(); 2014 <= i; i--) {\r\n\t\tObject.keys(seasons).forEach((key) => {\r\n\t\t\tbuttonList.push(\r\n\t\t\t\t<Button\r\n\t\t\t\t\tyear={i}\r\n\t\t\t\t\tseason={seasons[key]}\r\n\t\t\t\t\tperiod={key}\r\n\t\t\t\t\thandleClick={(year: number, period: number) => handleClickSetSeason(year, period)}\r\n\t\t\t\t></Button>,\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(season);\r\n\t\tdispatch(getAnnimeAsync(season.year, season.period));\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div onLoad={getDefaultAnimeList}>{buttonList}</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Anime;\r\n"]},"metadata":{},"sourceType":"module"}